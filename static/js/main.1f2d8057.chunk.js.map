{"version":3,"sources":["components/Form.js","components/Todo.js","components/todolist.js","App.js","reportWebVitals.js","index.js"],"names":["Form","inputText","setInputText","todos","setTodos","setStatus","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","todolist","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f2d8057.chunk.js","sourcesContent":["import React from 'react';\n\nconst Form = ({inputText, setInputText, todos, setTodos, setStatus}) => {\n    const inputTextHandler = (e) =>{\n      setInputText(e.target.value);\n    };\n    const submitTodohandler=(e)=>{\n      e.preventDefault();\n      setTodos([\n        ...todos, {text: inputText, completed: false, id: Math.random()*1000}\n      ]);\n      setInputText(\"\");\n    };\n    const statusHandler = (e) =>{\n      setStatus(e.target.value);\n    }\n\n\n    return(\n     <form>\n      <input value = {inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\n      <button onClick={submitTodohandler} className=\"todo-button\" type=\"submit\">\n        <i className=\"fas fa-plus-square\"></i>\n      </button>\n      <div className=\"select\">\n        <select onChange= {statusHandler} name=\"todos\" className=\"filter-todo\">\n          <option value=\"all\">All</option>\n          <option value=\"completed\">Completed</option>\n          <option value=\"uncompleted\">Uncompleted</option>\n        </select>\n      </div>\n    </form>\n    );\n}\nexport default Form;","import React from 'react';\n\nconst Todo =({text, todo, todos, setTodos})=> {\n    //events\n    const deleteHandler = () => {\n        setTodos(todos.filter((el) => el.id !== todo.id));\n    };\n\n    const completeHandler = () => {\n        setTodos(todos.map((item)=> {\n            if(item.id === todo.id){\n                return{\n                    ...item, completed: !item.completed\n                }\n            }\n            return item;\n        }));\n    }\n\n    return(\n        <div className=\"todo\">\n            <li className={`todo-item ${todo.completed ? \"completed\" : \"\" }`}>{text}</li>\n            <button onClick={ completeHandler } className=\"complete-btn\"><i className= \"fas fa-check\"></i></button>\n            <button onClick= { deleteHandler } className=\"trash-btn\"><i className= \"fas fa-trash\"></i></button>\n        </div>\n    );\n}\n\nexport default Todo;","import React from 'react';\nimport Todo from './Todo';\n\nconst todolist = ({todos, setTodos, filteredTodos }) => {\n   return (\n    <div className=\"todo-container\">\n      <ul className=\"todo-list\">\n        {filteredTodos.map(todo => (\n          <Todo  setTodos={setTodos} todos={todos} key= {todo.id} todo = {todo} text= {todo.text} />\n        ))}\n        </ul>       \n    </div>\n    );\n};\nexport default todolist;","import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport Form from './components/Form';\nimport Todolist from './components/todolist';\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  //use once\n  useEffect(()=> {\n    getLocalTodos();\n  },[]);\n\n  useEffect(()=> {\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, status]);\n\n  const filterHandler =()=>{\n    switch(status){\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed ===true))\n        break;\n      case 'uncompleted':\n        setFilteredTodos(todos.filter(todo => todo.completed ===false))\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  }\n\n  const saveLocalTodos =()=>{\n    localStorage.setItem('todos', JSON.stringify(todos));\n    \n  }\n\n  const getLocalTodos =()=>{\n    if(localStorage.getItem('todos') === null ){\n      localStorage.setItem('todos', JSON.stringify([]));\n    }\n    else{\n      let todoLocal = JSON.parse(localStorage.getItem('todos'));\n      setTodos(todoLocal);\n    }\n  }\nreturn (\n    <div className=\"App\">\n      <header>\n        <h2>TODO</h2>\n      </header>\n      <Form inputText = {inputText} todos= {todos} setTodos = {setTodos} setInputText = {setInputText} setStatus={setStatus}  />\n      <Todolist setTodos={setTodos} todos={todos} filteredTodos = {filteredTodos} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}